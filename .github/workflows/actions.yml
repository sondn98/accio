name: Accio

run-name: ${{ github.actor }} is running on GitHub Actions ðŸš€

on:
  - push

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'
      - name: Dependencies
        run: |
          pip install -r requirements.txt
          python -m pip install --upgrade pip
      - name: Check code format
        run: |
          FORMAT=$(black . --check -l 120 || echo $?)
          if [ "$FORMAT" == "1" ]; then exit 1; fi
      - name: Generate condition lexer & parser
        run: |
          antlr4 -Dlanguage=Python3 analyzers/conditions/ConditionLexer.g4 -o gen
          antlr4 -Dlanguage=Python3 -lib gen/analyzers/conditions -listener analyzers/conditions/ConditionParser.g4 -o gen
          mv gen/analyzers/conditions/* gen
          rm -rf gen/analyzers/
      - name: Run unit tests
        run: pytest
      - name: Upload ANTLR4 generated code
        uses: actions/upload-artifact@v2
        with:
          name: antlr4-code-gen
          path: gen
          retention-days: 1
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '50 90'



